char        = { 'a'..'z' | 'A'..'Z' }
num		    = @{ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+)? }
name        = @{ char+ }
value       = _{ num }
suffixed    = ${ value ~ expr }
infix    = { expr_proto ~ "=" ~ expr }

eval = { name ~ expr }

doc = { lines ~ EOI }

expr = _{
    children
    | eval
	| infix
    | expr_proto
}
expr_proto = _{
    children
    | eval
    | suffixed
    | value
    | name
    | "(" ~ expr ~ ")"
}

// Indent

WHITESPACE = _{ " " }

lines = { line ~ (next_line)* }
line = _{ expr ~ (expr)? }
next_line = _{ identation ~ line }

identation = ${ "\n" ~ PEEK_ALL }
identation_push = ${ identation ~ PUSH(space) }

space = _{ (" " | "\t")+ }
children = { identation_push ~ lines ~ DROP }